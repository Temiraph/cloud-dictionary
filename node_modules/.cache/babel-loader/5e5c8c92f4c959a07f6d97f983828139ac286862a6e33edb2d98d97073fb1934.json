{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[terms,setTerms]=useState([]);const[searchTerm,setSearchTerm]=useState('');const[filteredTerms,setFilteredTerms]=useState([]);const apiUrl='https://u08kuu3n1i.execute-api.eu-west-2.amazonaws.com/development';// Replace with your API Gateway URL\nconst handleSearch=()=>{console.log('Fetching data from API...');// Construct the URL based on searchTerm\nconst url=searchTerm?\"\".concat(apiUrl,\"/get-definition?term=\").concat(encodeURIComponent(searchTerm)):\"\".concat(apiUrl,\"/get-definition\");// Adjust for getting all terms if no searchTerm\naxios.get(url).then(response=>{console.log('API Response:',response.data);setTerms(response.data?[response.data]:[]);// Assuming only one term returned\nsetFilteredTerms(response.data?[response.data]:[]);}).catch(error=>{console.error('Error fetching data:',error);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Cloud Dictionary\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search for a term\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,children:\"Search\"}),\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"dictionary-container\",children:filteredTerms.map(term=>/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:term.term}),/*#__PURE__*/_jsx(\"p\",{children:term.definition})]},term.term))})]});};export default App;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","App","terms","setTerms","searchTerm","setSearchTerm","filteredTerms","setFilteredTerms","apiUrl","handleSearch","console","log","url","concat","encodeURIComponent","get","then","response","data","catch","error","className","children","type","placeholder","value","onChange","e","target","onClick","map","term","definition"],"sources":["/home/temi/aws-projects/project4/ztc-projects-intermediate/projects/intermediate/project4/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [terms, setTerms] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredTerms, setFilteredTerms] = useState([]);\n\n  const apiUrl = 'https://u08kuu3n1i.execute-api.eu-west-2.amazonaws.com/development'; // Replace with your API Gateway URL\n\n  const handleSearch = () => {\n    console.log('Fetching data from API...');\n    \n    // Construct the URL based on searchTerm\n    const url = searchTerm\n      ? `${apiUrl}/get-definition?term=${encodeURIComponent(searchTerm)}`\n      : `${apiUrl}/get-definition`; // Adjust for getting all terms if no searchTerm\n\n    axios\n      .get(url)\n      .then(response => {\n        console.log('API Response:', response.data);\n        setTerms(response.data ? [response.data] : []);  // Assuming only one term returned\n        setFilteredTerms(response.data ? [response.data] : []);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Cloud Dictionary</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Search for a term\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <button onClick={handleSearch}>Search</button> {/* Add Search button */}\n      </header>\n      <div className=\"dictionary-container\">\n        {filteredTerms.map((term) => (\n          <div key={term.term} className=\"card\">\n            <h3>{term.term}</h3>\n            <p>{term.definition}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACS,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACW,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEtD,KAAM,CAAAa,MAAM,CAAG,oEAAoE,CAAE;AAErF,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAExC;AACA,KAAM,CAAAC,GAAG,CAAGR,UAAU,IAAAS,MAAA,CACfL,MAAM,0BAAAK,MAAA,CAAwBC,kBAAkB,CAACV,UAAU,CAAC,KAAAS,MAAA,CAC5DL,MAAM,mBAAiB,CAAE;AAEhCZ,KAAK,CACFmB,GAAG,CAACH,GAAG,CAAC,CACRI,IAAI,CAACC,QAAQ,EAAI,CAChBP,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEM,QAAQ,CAACC,IAAI,CAAC,CAC3Cf,QAAQ,CAACc,QAAQ,CAACC,IAAI,CAAG,CAACD,QAAQ,CAACC,IAAI,CAAC,CAAG,EAAE,CAAC,CAAG;AACjDX,gBAAgB,CAACU,QAAQ,CAACC,IAAI,CAAG,CAACD,QAAQ,CAACC,IAAI,CAAC,CAAG,EAAE,CAAC,CACxD,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,EAAI,CACdV,OAAO,CAACU,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CAAC,CAAC,CACN,CAAC,CAED,mBACEpB,KAAA,QAAKqB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBtB,KAAA,WAAQqB,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5BxB,IAAA,OAAAwB,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBxB,IAAA,UACEyB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,mBAAmB,CAC/BC,KAAK,CAAErB,UAAW,CAClBsB,QAAQ,CAAGC,CAAC,EAAKtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAChD,CAAC,cACF3B,IAAA,WAAQ+B,OAAO,CAAEpB,YAAa,CAAAa,QAAA,CAAC,QAAM,CAAQ,CAAC,IAAC,EACzC,CAAC,cACTxB,IAAA,QAAKuB,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAClChB,aAAa,CAACwB,GAAG,CAAEC,IAAI,eACtB/B,KAAA,QAAqBqB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnCxB,IAAA,OAAAwB,QAAA,CAAKS,IAAI,CAACA,IAAI,CAAK,CAAC,cACpBjC,IAAA,MAAAwB,QAAA,CAAIS,IAAI,CAACC,UAAU,CAAI,CAAC,GAFhBD,IAAI,CAACA,IAGV,CACN,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA9B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}